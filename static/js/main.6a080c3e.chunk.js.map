{"version":3,"sources":["assets/video.mp4","assets/Logo.png","pages/mainvideo/MainVideo.tsx","components/HeaderMenu.tsx","pages/contact/Contact.tsx","pages/about/About.tsx","pages/philosophy/Philosophy.tsx","pages/home/Home.tsx","components/Test.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","MainVideo","className","id","loop","autoPlay","muted","src","skating_video","type","Logo","alt","to","HeaderMenu","useState","isOpen","setIsOpen","isMobile","activeClassName","onClick","Contact","About","Philosophy","Home","Test","path","App","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"4FAAAA,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,iQCM9BC,G,MAAY,WACrB,OACI,6BACI,yBAAKC,UAAU,aACX,2BAAOC,GAAG,mBAAmBC,MAAI,EAACC,UAAQ,EAACC,OAAK,GAC5C,4BAAQC,IAAKC,IAAeC,KAAK,cADrC,gDAIA,yBAAKP,UAAU,WACX,yBAAKA,UAAU,QAAO,yBAAKK,IAAKG,IAAMC,IAAI,UAC1C,6BACI,kBAAC,IAAD,CAAMC,GAAG,SACL,yBAAKV,UAAU,aAAa,MAA5B,cAA8C,c,gCCV7DW,EAAa,WAAO,IAAD,EACAC,oBAAS,GADT,mBACrBC,EADqB,KACbC,EADa,KAG5B,OACI,qCAESC,YACD,6BACI,yBAAKf,UAAU,aACX,kBAAC,IAAD,CAASU,GAAG,QAAQV,UAAU,WAAWgB,gBAAgB,UAAzD,eACA,yBAAKhB,UAAU,WACf,kBAAC,IAAD,CAASU,GAAG,SAASV,UAAU,WAAWgB,gBAAgB,UAA1D,SACA,kBAAC,IAAD,CAASN,GAAG,cAAcV,UAAU,WAAWgB,gBAAgB,UAA/D,cACA,kBAAC,IAAD,CAASN,GAAG,WAAWV,UAAU,WAAWgB,gBAAgB,UAA5D,aAKRD,YACI,oCACI,yBAAKE,QAAS,kBAAMH,GAAU,KAC1B,kBAAC,QAAD,CAAMD,OAAQA,GACV,kBAAC,IAAD,CAASH,GAAG,QAAQV,UAAU,WAAWgB,gBAAgB,UAAzD,eAEA,kBAAC,IAAD,CAASN,GAAG,SAASV,UAAU,WAAWgB,gBAAgB,UAA1D,SACA,kBAAC,IAAD,CAASN,GAAG,cAAcV,UAAU,WAC3BgB,gBAAgB,UADzB,cAEA,kBAAC,IAAD,CAASN,GAAG,WAAWV,UAAU,WACxBgB,gBAAgB,UADzB,aAIR,yBAAKhB,UAAU,kBACX,yBAAKA,UAAU,SAAf,mBCtCfkB,EAAU,WACnB,OACI,uCACI,wCACA,wCACA,wCACA,wCACA,wCACA,0CCRCC,EAAQ,WACjB,OACI,uCCFKC,EAAa,WACtB,OACI,4CCFKC,EAAO,WAChB,OACI,sCCgCOC,MAxBf,WACI,OACI,kBAAC,IAAD,KACI,kBAAC,EAAD,MACA,8BACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAK,YACR,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,UACR,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,eACR,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,SACR,kBAAC,EAAD,WCDLC,MAhBf,WACI,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACF,KAAK,KACd,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,KACR,kBAAC,EAAD,UCPAG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDiIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.6a080c3e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/video.b6c1e675.mp4\";","module.exports = __webpack_public_path__ + \"static/media/Logo.c17eaf61.png\";","import skating_video from \"../../assets/video.mp4\";\r\nimport Logo from \"../../assets/Logo.png\";\r\nimport React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport './MainVideo.scss'\r\n\r\nexport const MainVideo = () => {\r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n                <video id=\"background-video\" loop autoPlay muted>\r\n                    <source src={skating_video} type=\"video/mp4\"/>\r\n                    Your browser does not support the video tag.\r\n                </video>\r\n                <div className=\"overlay\">\r\n                    <div className=\"logo\"><img src={Logo} alt=\"Logo\"/></div>\r\n                    <div>\r\n                        <Link to=\"/home\">\r\n                            <div className=\"enter-now\">{\">>>\"} Enter now {\"<<<\"}</div>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, {useState} from \"react\";\r\nimport './HeaderMenu.scss';\r\nimport {Link, NavLink} from \"react-router-dom\";\r\nimport {\r\n    isMobile\r\n} from \"react-device-detect\";\r\nimport {ReactBurgerMenu, slide as Menu} from \"react-burger-menu\";\r\n\r\nexport const HeaderMenu = () => {\r\n    const [isOpen, setIsOpen] = useState(false)\r\n\r\n    return (\r\n        <>\r\n            {\r\n                !isMobile &&\r\n                <nav>\r\n                    <div className=\"main-menu\">\r\n                        <NavLink to=\"/home\" className=\"nav-link\" activeClassName=\"active\">Project 202</NavLink>\r\n                        <div className=\"spacer\"/>\r\n                        <NavLink to=\"/about\" className=\"nav-link\" activeClassName=\"active\">About</NavLink>\r\n                        <NavLink to=\"/philosophy\" className=\"nav-link\" activeClassName=\"active\">Philosophy</NavLink>\r\n                        <NavLink to=\"/contact\" className=\"nav-link\" activeClassName=\"active\">Contact</NavLink>\r\n                    </div>\r\n                </nav>\r\n            }\r\n            {\r\n                isMobile &&\r\n                    <>\r\n                        <div onClick={() => setIsOpen(false)}>\r\n                            <Menu isOpen={isOpen}>\r\n                                <NavLink to=\"/home\" className=\"nav-link\" activeClassName=\"active\">Project\r\n                                    202</NavLink>\r\n                                <NavLink to=\"/about\" className=\"nav-link\" activeClassName=\"active\">About</NavLink>\r\n                                <NavLink to=\"/philosophy\" className=\"nav-link\"\r\n                                         activeClassName=\"active\">Philosophy</NavLink>\r\n                                <NavLink to=\"/contact\" className=\"nav-link\"\r\n                                         activeClassName=\"active\">Contact</NavLink>\r\n                            </Menu>\r\n                        </div>\r\n                        <div className=\"mobile-wrapper\">\r\n                            <div className=\"title\">\r\n                                Project 202\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n            }\r\n        </>\r\n    );\r\n}","import React from \"react\";\r\n\r\nexport const Contact = () => {\r\n    return (\r\n        <div>Contact\r\n            <div>Contact</div>\r\n            <div>Contact</div>\r\n            <div>Contact</div>\r\n            <div>Contact</div>\r\n            <div>Contact</div>\r\n            <div>Contact</div></div>\r\n\r\n    );\r\n}\r\n","import React from \"react\";\r\n\r\nexport const About = () => {\r\n    return (\r\n        <div>About</div>\r\n    );\r\n}\r\n","import React from \"react\";\r\n\r\nexport const Philosophy = () => {\r\n    return (\r\n        <div>Philosophy</div>\r\n    );\r\n}\r\n","import React from \"react\";\r\n\r\nexport const Home = () => {\r\n    return (\r\n        <div>\r\n            Home\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route\r\n} from \"react-router-dom\";\r\nimport {HeaderMenu} from \"./HeaderMenu\";\r\nimport {Contact} from \"../pages/contact/Contact\";\r\nimport {About} from \"../pages/about/About\";\r\nimport {Philosophy} from \"../pages/philosophy/Philosophy\";\r\nimport {Home} from \"../pages/home/Home\";\r\n\r\nfunction Test() {\r\n    return (\r\n        <Router>\r\n            <HeaderMenu/>\r\n            <main>\r\n            <Switch>\r\n                <Route path=\"/contact\">\r\n                    <Contact/>\r\n                </Route>\r\n                <Route path=\"/about\">\r\n                    <About/>\r\n                </Route>\r\n                <Route path=\"/philosophy\">\r\n                    <Philosophy/>\r\n                </Route>\r\n                <Route path=\"/home\">\r\n                    <Home/>\r\n                </Route>\r\n            </Switch>\r\n            </main>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default Test;\r\n","import React from 'react';\nimport './App.css';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\nimport {MainVideo} from \"./pages/mainvideo/MainVideo\";\nimport Test from \"./components/Test\";\n\nfunction App() {\n    return (\n        <Router>\n            <Switch>\n                <Route exact path=\"/\" >\n                    <MainVideo/>\n                </Route>\n                <Route path=\"/\">\n                    <Test />\n                </Route>\n            </Switch>\n        </Router>\n\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}